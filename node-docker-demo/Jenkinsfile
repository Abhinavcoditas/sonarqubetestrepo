def buildNumber = BUILD_NUMBER as int
if (buildNumber > 1) milestone(buildNumber - 1)
milestone(buildNumber)

pipeline {
  agent any
  
  environment {
    CI_COMMIT_SHA = "$GIT_COMMIT"
  }

  stages {
    
    /* stage('SonarQube main Build') {
      steps {
          script {
            def scannerOutput = sh (
              script: 'sonar-scanner -D sonar.projectKey=sonatrivy -D sonar.sources=. -D sonar.host.url=http://192.168.3.132:9000 -D sonar.token=sqp_90c406f394c2711e71ba4d3edc2352a12dbbde58',
              returnStdout: true
            ).trim()
            
            echo "SonarQube Scanner Output:"
            echo scannerOutput
            
            if (scannerOutput.contains('INFO: EXECUTION FAILED')) {
              error "SonarQube scan execution failed"
          }
        }
      }
    } */
    
    stage('Image Build') {
      steps {
        sh '''
          aws configure set aws_access_key_id "AKIATQBXFCLVBOLHZBGE"; aws configure set aws_secret_access_key "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"; aws configure set default.region "ap-south-1"
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 240633844458.dkr.ecr.ap-south-1.amazonaws.com
          docker build -t "240633844458.dkr.ecr.ap-south-1.amazonaws.com/sonatrivytest:$CI_COMMIT_SHA" -f node-docker-demo/Dockerfile .
          '''
      }
    }
    stage('Trivy Scanning') {
      steps {
        script {
          // Run Trivy image scan in JSON format and store the output in a file
      sh 'trivy image --format json --output result.json "240633844458.dkr.ecr.ap-south-1.amazonaws.com/sonatrivytest:$CI_COMMIT_SHA"'

      // Parse the JSON file to extract the total number of vulnerabilities
      def totalVulnerabilities = 0
      try {
        def jsonData = new JsonSlurper().parse(file('result.json'))
        totalVulnerabilities = jsonData.Vulnerabilities.size()
      } catch (Exception e) {
        echo "Error parsing Trivy JSON output: ${e.message}"
      }

      // Use the totalVulnerabilities variable for decision making
      if (totalVulnerabilities > 0) {
        echo "Image contains ${totalVulnerabilities} vulnerabilities. Consider fixing them before deployment."
        // You can potentially fail the stage here or trigger further actions based on your requirements.
      } else {
        echo 'Image scan found no vulnerabilities.'
      }

        }
      }
    }
    // stage('Manual Confirmation') {
    //   steps {
    //     script {
    //       input(message: 'Do you want to proceed with pushing the image to ECR?', submitter: 'user')
    //     }
    //   }
    // }
    // stage('Image push') {
    //   steps {
    //     sh '''
    //       docker push "240633844458.dkr.ecr.ap-south-1.amazonaws.com/sonatrivytest:$CI_COMMIT_SHA"
    //     '''
    //   }
    // }
  }
}

